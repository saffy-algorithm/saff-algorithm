# 방향 결정 우선 순위 : 무조건 좌->우->위 순서로 ㄱ
# 갈 수 있는 방향에 계속 가고, 갈 수 없으면 바꾼다
# 계속 같은 방향으로 가는 while 문 구조
# 좌우 중 하나만 갈 수 있는 구조에서 둘다 갈 수 있는 경우는 없음 (입력 보장)

for tc in range(1, 11):
    N = int(input())
    data = [list(map(int, input().split())) for _ in range(100)]

    # 끝나는 지점이 2인 좌표 찾기 (여기서 시작)
    for j in range(100): # 마지막 줄(99번째줄)의 열을 훑으며
        if data[99][j] == 2: # 값이 2인 곳이 있다면
            x = 99 # 행 (맨 아래))
            y = j # 열 (2가 있는 열)
            break # 찾았으면 그만 찾기 (불필요한 계산 제거)


    # 아래서부터 이어지게 올라가기
    while x > 0 : # 맨 윗줄(0행)에 도달할 때까지 반복
        if y > 0 and data[x][y-1] ==1: # 왼쪽으로 갈 수 있으면
            while y > 0 and data[x][y-1] ==1: # 왼쪽이 1인 동안 계속 왼쪽으로
                y -= 1
            x -= 1 # 왼쪽 다 간 다음 한 칸 위로 올라감

        elif y < 99 and data[x][y+1] == 1: # 오른쪽으로 갈 수 있으면
            while y < 99 and data [x][y+1] == 1: # 오른쪽이 1인 동안 계속 오른쪽으로
                y += 1
            x -= 1 # 오른쪽 다 간 다음 한 칸 위로
        else: # 양쪽 다 1이 아니면
            x -= 1 # 그냥 위로 한 칸 이동

    print(f'#{tc} {y}') # 시작점의 y 좌표 (열 번호)를 출력